{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf350
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red191\green0\blue0;\red0\green0\blue191;
\red96\green96\blue96;\red0\green115\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs18 \cf2 \
\cf3 /* \
\
OC  April 21, 2011: 14:41 PM\
\
*/\cf2 \
\
\
\
\cf3 // =======================================================================\cf2 \
\{\
\
	\cf4 var\cf2  g, a, midiResponders;\
	g = \cf4 SCMenuGroup\cf2 (\cf4 nil\cf2 , \cf5 "omerCho"\cf2 , 11);\
\pard\pardeftab560\ql\qnatural
\cf2 	\cf3 /*	\
	a = SCMenuItem(g, "open startup file");\
	a.action = \{ (Platform.userAppSupportDir ++ "/startupOC/omerChoStartup1.rtf").openTextFile; \};\
	a.setShortCut("s", true, true); // Cmd-ctrl-alt-s\
	\
	f = \{ | server, name, startcolor, donecolor |\
		var w;\
		w = Window(name ++ " server booting!", Rect(0, 0, 300, 400));\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab560\ql\qnatural\pardirnatural
\cf3 		w.front.view.background = startcolor;\
		server.doWhenBooted(\{\
\pard\pardeftab560\ql\qnatural
\cf3 			w.name = name ++ " server booted";\
			w.view.background = donecolor;\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab560\ql\qnatural\pardirnatural
\cf3 			\{ w.close \}.defer(1.5);\
		\});\
		if (server.serverRunning.not) \{ server.boot \}\
\pard\pardeftab560\ql\qnatural
\cf3 	\};\
	\
	a = SCMenuItem(g, "boot local server");\
	a.action = \{ f.(Server.local, "Local", Color.white, Color.red) \};\
	a.setShortCut("l", true, true); // Cmd-ctrl-alt-l\
	a = SCMenuItem(g, "quit local server");\
	a.action = \{ Server.local.quit \};\
	a.setShortCut("l", true); //////  // Cmd-alt-l\
	a = SCMenuItem(g, "boot internal server");\
	a.action = \{ f.(Server.internal, "Internal", Color.black, Color.green) \};\
	a.setShortCut("i", true, true); // Cmd-ctrl-alt-i\
	a = SCMenuItem(g, "quit internal server");\
	a.action = \{ Server.internal.quit \};\
	a.setShortCut("i", true); // Cmd-alt-i\
	\
	a = SCMenuItem(g, "reread help directory from disk");\
	a.action = \{ Help.updateTree; \};\
	a.setShortCut("r", true, true); // Cmd-ctrl-alt-r\
	\
	a = SCMenuItem(g, "post work sound root directory");\
	a.action = \{ (Platform.userAppSupportDir ++ "/sounds/").asCompileString.postln; \};\
	a.setShortCut("S", true, true); // Cmd-ctrl-alt-S\
	*/\cf2 \
	a = \cf4 SCMenuItem\cf2 (g, \cf5 "'load buffers by code' dialog"\cf2 );\
	a.action = \{\
		\cf4 CocoaDialog\cf2 .getPaths(\{ \cf4 | paths |\cf2 \
			\cf5 "(\
	b = ["\cf2 .postln;\
			paths do: \{ \cf4 | p |\cf2 \
				postf(\cf5 "\\t \\"%\\",\\n"\cf2 , p);\
			\};\
			\cf5 "] collect: Buffer.readChannel(Server.default, _, channels: [0], action: _.updateInfo);\
	)"\cf2 .postln;\
		\}, \{ \}, \cf4 true\cf2 );\
	\};\
	a.setShortCut(\cf5 "b"\cf2 , \cf4 true\cf2 , \cf4 true\cf2 ); \cf3 // Cmd-ctrl-alt-b\cf2 \
	\
	\
	\
	\cf3 //------------------------- OSC -------------------------\cf2 \
	\
	a = \cf4 SCMenuItem\cf2 (g, \cf5 "post all incoming OSC messages"\cf2 );\
	a.action = \{  \cf4 thisProcess\cf2 .recvOSCfunc = \{ \cf4 | ... args |\cf2  args.postln \}; \};\
	a.setShortCut(\cf5 "o"\cf2 , \cf4 true\cf2 , \cf4 true\cf2 ); \cf3 // Cmd-ctrl-alt-o\cf2 \
	a = \cf4 SCMenuItem\cf2 (g, \cf5 "stop posting incoming OSC messages"\cf2 );\
	a.action = \{  \cf4 thisProcess\cf2 .recvOSCfunc = \cf4 nil\cf2  \};\
	a.setShortCut(\cf5 "O"\cf2 , \cf4 true\cf2 , \cf4 true\cf2 ); \cf3 // Cmd-ctrl-alt-shift-o\cf2 \
	\
	\
	\cf3 //------------------------- MIDI -------------------------\cf2 \
	\
	a = \cf4 SCMenuItem\cf2 (g, \cf5 "post all incoming MIDI messages"\cf2 );\
	a.action = \{\
		\cf4 var\cf2  window, list;\
		\cf4 MIDIClient\cf2 .init;	\cf3 // scan all midi sources\cf2 \
		\cf4 MIDIClient\cf2 .sources do: \{ \cf4 | s, i |\cf2  \cf4 MIDIIn\cf2 .connect(i, s) \}; \cf3 // connect all midi sources\cf2 \
		window = \cf4 Window\cf2 (\cf5 "MIDI sources"\cf2 , \cf4 Rect\cf2 (100, 100, 400, 200));\
		list = \cf4 ListView\cf2 (window, window.view.bounds.insetBy(5, 5));\
		list.font = \cf4 Font\cf2 (\cf5 "Arial"\cf2 , 10);\
		list.items = \cf4 MIDIClient\cf2 .sources collect: \{ \cf4 | s |\cf2  format(\cf5 "%:% (%)"\cf2 , s.device, s.name, s.uid) \};\
		window.front;\
\cf3 //		\{ window.close \}.defer(5);\cf2 \
		if (midiResponders.isNil) \{\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf2 			midiResponders = [\cf4 CCResponder\cf2 , \cf4 NoteOnResponder\cf2 , \cf4 NoteOffResponder\cf2 , \cf4 BendResponder\cf2 , \cf4 TouchResponder\cf2 ] collect: \
\pard\pardeftab560\ql\qnatural
\cf2 				\{ \cf4 | r |\cf2  r.new(\{ \cf4 | ... args |\cf2  [r.name, args].postln \}, install: \cf4 false\cf2 ) \};\
		\};\
		midiResponders do: \{ \cf4 | r |\cf2  r.class.add(r) \};\
		\cf5 "MIDI posting activated"\cf2 .postln;\
	\};\
	a.setShortCut(\cf5 "m"\cf2 , \cf4 true\cf2 , \cf4 true\cf2 ); \cf3 // Cmd-ctrl-alt-m\cf2 \
	a = \cf4 SCMenuItem\cf2 (g, \cf5 "stop posting incoming MIDI messages"\cf2 );\
	a.action = \{\
		midiResponders do: \cf4 _\cf2 .remove;\
		\cf5 "MIDI posting deactivated"\cf2 .postln;\
	\};\
	a.setShortCut(\cf5 "M"\cf2 , \cf4 true\cf2 , \cf4 true\cf2 ); \cf3 // Cmd-ctrl-alt-shift-m\cf2 \
\
	\
	\
	\
	\
	\cf3 // ---------------------- SynthDescs -------------------------\cf2 \
\
	a = \cf4 SCMenuItem\cf2 (g, \cf5 "Browse SynthDescs"\cf2 );\
	a.action = \{\
		if (\cf4 SynthDescLib\cf2 .global.synthDescs.size <= 1) \{\
			\cf5 "Reading SynthDescs from synthdef directory"\cf2 .postln;\
			\cf4 SynthDescLib\cf2 .read;\
		\};\
		\cf4 SynthDescLib\cf2 .global.browse\
	\};\
	a = \cf4 SCMenuItem\cf2 (g, \cf5 "Load SynthDescs from synthdef directory"\cf2 );\
	a.action = \{ \cf4 SynthDescLib\cf2 .read \};\
\
	\
	\
\
\
	\cf3 // ------------------------- SAVE ALL DOCUMENT POSITIONS -----------------------\cf2 \
	a = \cf4 SCMenuItem\cf2 (g, \cf5 "Save document paths and windows"\cf2 );\
	a.action = \{\
		\cf4 Archive\cf2 .global.put(\cf6 \\myDocuments\cf2 , \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf2 			\cf4 Document\cf2 .allDocuments collect: \{ \cf4 | d |\cf2  \
			(name: d.name, bounds: d.bounds, path: d.path)\
		\});\
		\cf5 "Document positions and paths saved"\cf2 .postln;\
	\};\
\pard\pardeftab560\ql\qnatural
\cf2 	a.setShortCut(\cf5 "d"\cf2 , \cf4 true\cf2 , \cf4 true\cf2 ); \cf3 // Cmd-ctrl-alt-d\cf2 \
	\cf3 // ------------------------- LOAD SAVED DOCUMENTS  -----------------------\cf2 \
	a = \cf4 SCMenuItem\cf2 (g, \cf5 "Load saved documents"\cf2 );\
	a.action = \{\
		\cf4 var\cf2  session;\
		session = \cf4 Archive\cf2 .global.at(\cf6 \\myDocuments\cf2 );\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab560\ql\qnatural\pardirnatural
\cf2 		session do: \{ \cf4 | d |\cf2 \
			if (d.path.isNil) \{\
			if (d.name != \cf5 " post "\cf2 ) \{\
				\cf4 Document\cf2 (d.name).bounds_(d.bounds)\
			\}\{\
				\cf4 Document\cf2 .allDocuments.detect(\{ \cf4 | d |\cf2  d.name == \cf5 " post "\cf2  \}).bounds_(d.bounds);\
			\}\
		\}\{\
			\cf4 Document\cf2 .open(d.path).bounds_(d.bounds)\
		\}\
		\};\
	\};\
\pard\pardeftab560\ql\qnatural
\cf2 	a.setShortCut(\cf5 "D"\cf2 , \cf4 true\cf2 , \cf4 true\cf2 ); \cf3 // Cmd-ctrl-alt-d\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf2 \
\
\pard\pardeftab560\ql\qnatural
\cf2 	\
	\cf3 //------------------------- Colorize by Igoumeninja Nov 2010 -------------------------//\cf2 \
	\cf4 Document\cf2 .themes.put(\cf6 \\omerChoTheme\cf2 , \
\pard\pardeftab560\li1140\fi-1140\ql\qnatural
\cf2 		(\
			classColor: \cf4 Color\cf2 .new255(105, 105, 255),\
			textColor: \cf4 Color\cf2 .new255(255, 255, 255),\
			stringColor: \cf4 Color\cf2 .new255(148, 149, 155),\
			commentColor: \cf4 Color\cf2 .new255(255,100,79),\
			symbolColor: \cf4 Color\cf2 .new255(90, 255, 90),\
			numberColor: \cf4 Color\cf2 .new255(250,248,227)\
		)\
	);\
\pard\pardeftab560\ql\qnatural
\cf2 \
	a = \cf4 SCMenuItem\cf2 (g, \cf5 "Colorize"\cf2 );\
	a.action = \{ \
\pard\pardeftab560\li1140\fi-1140\ql\qnatural
\cf2 		\cf3 //putting a custom color theme into Document.themes\cf2 \
		\cf4 Document\cf2 .setTheme(\cf6 'omerChoTheme'\cf2 );\
		\cf4 Document\cf2 .theme;\
\pard\pardeftab560\ql\qnatural
\cf2 		\cf4 Document\cf2 .current.background = \cf4 Color\cf2 (0, 0, 0, 0.94);\
	\};\
	a.setShortCut(\cf5 "c"\cf2 , \cf4 true\cf2 , \cf4 true\cf2 ); \
	a = \cf4 SCMenuItem\cf2 (g, \cf5 "Reset Colorize"\cf2 );\
	a.action = \{ \
		\cf4 Document\cf2 .setTheme(\cf6 'default'\cf2 );\
		\cf4 Document\cf2 .current.background = \cf4 Color\cf2 (255,255,255, 1);\
	\};\
	a.setShortCut(\cf5 "C"\cf2 , \cf4 true\cf2 , \cf4 true\cf2 ); \
\
\
\}.value;\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf2 \
\pard\pardeftab560\ql\qnatural
\cf2 \
\
\
\
\
\
\
}