{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf410
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fnil\fcharset77 Monaco;\f2\fswiss\fcharset77 Helvetica;
\f3\fswiss\fcharset77 Helvetica-Oblique;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red0\green0\blue0;\red191\green0\blue0;
\red0\green0\blue191;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\b\fs36 \cf0 FFTFlatnessSplitPercentile - Spectral flatness of FFT split at a percentile
\f1\b0\fs34 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\fs22 \cf0 \

\f0\b\fs24 	# lower, upper = FFTFlatnessSplitPercentile.kr(chain, fraction)\

\f2\b0 \
Splits the FFT power spectrum into two parts - above and below a given percentile (see \ul [FFTPercentile]\ulnone  for more info about that) - and then calculates the 
\f3\i spectral flatness measure 
\f2\i0 for the two parts of the spectrum. See \ul [FFTFlatness]\ulnone  for more about the spectral flatness measure.\
\
\
Examples:\

\f1\fs22 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\fs18 \cf0 s = \cf2 Server\cf0 .internal.boot; \
b = \cf2 Buffer\cf0 .alloc(s,2048,1);\
\cf3 \
(\
\{\
	\cf4 // Move the mouse left/right.\cf3 \
	\cf4 // In this example we artificically create a signal which \cf3 \
	\cf4 // has either:\cf3 \
	\cf4 // (1) a 'peaky' low-frequency spectrum and 'flat' high-frequency spectrum (mouse to the left)\cf3 \
	\cf4 // (2) a 'flat' low-frequency spectrum and 'peaky' high-frequency spectrum (mouse to the right)\cf3 \
\cf5 var\cf3  peakysound, flatsound, mixed, reversemixed, blended, chain, flat, lower, upper;\
peakysound = \cf5 SinOsc\cf3 .ar([10, 33, 100, 330, 1000, 3300, 10000]).mean;\
flatsound = \cf5 WhiteNoise\cf3 .ar;\
mixed = \cf5 XFade2\cf3 .ar(peakysound, flatsound, \cf5 MouseX\cf3 .kr(-1, 1), 0.1);\
reversemixed = \cf5 XFade2\cf3 .ar(peakysound, flatsound, \cf5 MouseX\cf3 .kr(1, -1), 0.1);\
blended = [\cf2 Normalizer\cf0 .ar(\cf2 HPF\cf0 .ar(reversemixed, 5000))\cf3 , \cf2 Normalizer\cf0 .ar(\cf2 LPF\cf0 .ar(mixed, 5000))\cf3 ].mean;\
chain = \cf5 FFT\cf3 (b.bufnum, blended);\
flat = \cf5 FFTFlatness\cf3 .kr(chain); \cf4 // This gets the "standard" flatness measure\cf3 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf3 # lower, upper = \cf5 FFTFlatnessSplitPercentile\cf3 .kr(chain, 0.1);\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf5 Out\cf3 .ar(0, blended);\
\cf5 Out\cf3 .kr(0, [upper, lower]); \cf4 // control-rate stuff to be scoped\cf3 \
\}.scope;\
)\
\cf4 \
\cf3 \
\cf4 // Audio input - try different vocal sounds and see what comes out.\
// For example, the difference between "ooooo" and "vvvvv" (hint: watch the upper).\cf3 \
(\
\{\
\cf5 var\cf3  in, chain, upper, lower;\
in = \cf5 AudioIn\cf3 .ar([1,2]).mean;\
chain = \cf5 FFT\cf3 (b.bufnum, in);\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf3 # lower, upper = \cf5 FFTFlatnessSplitPercentile\cf3 .kr(chain, 0.5);\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf4 //Out.ar(1, LPF.ar(WhiteNoise.ar, perc)); //NB Outputting to right channel - handy on PowerBooks\cf3 \
\cf5 Out\cf3 .kr(0, [upper, lower]); \cf4 // control-rate stuff to be scoped\cf3 \
\}.scope;\
)\
}